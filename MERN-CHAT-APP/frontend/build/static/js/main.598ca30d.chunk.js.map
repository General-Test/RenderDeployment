{"version":3,"sources":["Api.js","components/SingleChat.jsx","components/Authentication/Login.jsx","components/Authentication/SignUp.jsx","Pages/Homepage.js","Context/ChatProvider.js","config/ChatLogic.js","components/Miscellaneous/ProfileModal.jsx","components/UserAvatar/UserBadgeItem.jsx","components/UserAvatar/UserListItem.jsx","components/Miscellaneous/UpdateGroupChatModal.jsx","components/ScrollableChat.jsx","components/ChatBox.jsx","components/ChatLoading.jsx","components/Miscellaneous/GroupChatModel.jsx","components/MyChats.jsx","components/Miscellaneous/SideDrawer.jsx","Pages/ChatPage.js","App.js","index.js"],"names":["axios","defaults","baseURL","socket","selectedChatCompare","Login","useState","show","setShow","email","setEmail","password","setPassword","loading","setLoading","toast","useToast","history","useHistory","submitHandler","title","status","duration","isClosable","position","config","headers","post","data","localStorage","setItem","JSON","stringify","push","description","response","message","spacing","id","isRequired","placeholder","onChange","e","target","value","type","width","h","size","onClick","colorScheme","style","marginTop","isLoading","variant","SignUp","name","setName","confirmPassword","setConfirmPassword","pic","setPic","handleClick","p","accept","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","useEffect","parse","getItem","maxW","centerContent","d","justifyContent","bg","w","m","borderRadius","borderWidth","fontSize","fontFamily","color","mb","ChatContext","createContext","ChatState","useContext","ChatProvider","children","user","setUser","selectedChat","setSelectedChat","chats","setChats","notification","setNotification","userInfo","Provider","getSender","loggedUser","users","_id","isSameSender","messages","i","userId","length","sender","isLastMessage","isSameSenderMargin","isSameUser","ProfileModal","useDisclosure","isOpen","onOpen","onClose","base","icon","isCentered","height","flexDir","alignItems","boxSize","src","alt","md","mr","UserBadgeItem","handleFunction","px","py","background","cursor","pl","UserListItem","_hover","UpdateGroupChatModal","fetchAgain","setFetchAgain","fetchMessages","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","Authorization","token","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","map","admin","ml","ScrollableChat","display","label","placement","hasArrow","mt","padding","maxWidth","marginLeft","content","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","io","on","newMessageReceived","chat","includes","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","ChatBox","ChatLoading","GroupChatModel","selectedUsers","setSelectedUsers","handleSubmit","userToDelete","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","note","n","gotToChat","as","Button","removeItem","borderBottomWidth","ChatPage","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.598ca30d.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// const axiosAPI = () => axios.create({ baseURL: \"https://real-time-chat-app-gtu1.onrender.com\" });\n\naxios.defaults.baseURL = \"https://real-time-chat-app-gtu1.onrender.com\";\n\nexport default axios;\n","import { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  Input,\n  Spinner,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../Api\";\nimport io from \"socket.io-client\";\nimport Lottie from \"react-lottie\";\n\nimport { getSender, getSenderFull } from \"../config/ChatLogic\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport ProfileModal from \"./Miscellaneous/ProfileModal\";\nimport UpdateGroupChatModal from \"./Miscellaneous/UpdateGroupChatModal\";\nimport \"./styles.css\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport animationData from \"../animations/typing.json\";\n\nconst ENDPOINT = \"https://real-time-chat-app-gtu1.onrender.com/\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message received\", (newMessageReceived) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageReceived.chat._id\n      ) {\n        if (!notification.includes(newMessageReceived)) {\n          setNotification([newMessageReceived, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageReceived]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  VStack,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"../../Api\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const toast = useToast();\n  const history = useHistory();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const submitGuestUser = () => {\n    setEmail(\"guest@example.com\");\n    setPassword(\"12345\");\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input\n          placeholder=\"Enter Your Email\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n        />\n      </FormControl>\n\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup>\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={submitGuestUser}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  VStack,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"../../Api\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [pic, setPic] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const toast = useToast();\n  const history = useHistory();\n\n  const handleClick = () => setShow(!show);\n\n  const postDetails = (pic) => {\n    setLoading(true);\n    if (pic === undefined) {\n      toast({\n        title: \"Please select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pic.type === \"image/jpeg\" || pic.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pic);\n      data.append(\"upload_preset\", \"mern-chat-app\");\n      data.append(\"cloud_name\", \"drpvbqavw\");\n      fetch(\"https://api.cloudinary.com/v1_1/drpvbqavw/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n  };\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!name || !email || !password || !confirmPassword) {\n      toast({\n        title: \"Please Fill all the Fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      toast({\n        title: \"Password Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user\",\n        { name, email, password, pic },\n        config\n      );\n\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input\n          placeholder=\"Enter Your Email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup>\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup>\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm Password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <FormControl id=\"pic\">\n        <FormLabel>Upload Your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"images/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Container,\n  Box,\n  Text,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from \"@chakra-ui/react\";\n\nimport Login from \"../components/Authentication/Login\";\nimport SignUp from \"../components/Authentication/SignUp\";\n\nconst Homepage = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) {\n      history.push(\"/chats\");\n    }\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"whitesmoke\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\" color=\"black\">\n          Chit-Chat\n        </Text>\n      </Box>\n\n      <Box\n        bg=\"whitesmoke\"\n        w=\"100%\"\n        p={4}\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n        color=\"black\"\n      >\n        <Tabs variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab width=\"50%\">Login</Tab>\n            <Tab width=\"50%\">Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <SignUp />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Homepage;\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [user, setUser] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n  const [chats, setChats] = useState([]);\n  const [notification, setNotification] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        user,\n        setUser,\n        selectedChat,\n        setSelectedChat,\n        chats,\n        setChats,\n        notification,\n        setNotification,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","export const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser?._id ? users[1] : users[0];\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameSenderMargin = (messages, m, i, userId) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  ) {\n    return 33;\n  } else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  ) {\n    return 0;\n  } else {\n    return \"auto\";\n  }\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  IconButton,\n  Image,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n\n      <Modal isOpen={isOpen} onClose={onClose} size=\"lg\" isCentered>\n        <ModalOverlay />\n        <ModalContent height=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst UserBadgeItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      background=\"purple\"\n      color=\"white\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      <CloseIcon pl={1} />\n    </Box>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar, Box, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"whiteSmoke\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"1g\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"../../Api\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\nimport UserListItem from \"../UserAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchAgain, setFetchAgain, fetchMessages }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Avatar, Tooltip } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ScrollableFeed from \"react-scrollable-feed\";\n\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogic\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n\n            <span\n              style={{\n                background: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ChatState } from \"../Context/ChatProvider\";\nimport SingleChat from \"./SingleChat\";\n\nconst ChatBox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default ChatBox;\n","import React from \"react\";\nimport { Skeleton, Stack } from \"@chakra-ui/react\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"../../Api\";\n\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserListItem from \"../UserAvatar/UserListItem\";\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\n\nconst GroupChatModel = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const toast = useToast();\n  const { user, chats, setChats } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleDelete = (userToDelete) => {\n    setSelectedUsers(\n      selectedUsers.filter((sel) => sel._id !== userToDelete._id)\n    );\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal isOpen={isOpen} onClose={onClose} size=\"lg\" isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add users\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n          </ModalBody>\n\n          <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n            {selectedUsers.map((u) => (\n              <UserBadgeItem\n                key={u._id}\n                user={u}\n                handleFunction={() => handleDelete(u)}\n              />\n            ))}\n          </Box>\n\n          {loading ? (\n            <div>Loading ...</div>\n          ) : (\n            searchResult\n              ?.slice(0, 4)\n              .map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleGroup(user)}\n                />\n              ))\n          )}\n          <ModalFooter>\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModel;\n","import { Box, Button, Stack, Text, useToast } from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../Api\";\n\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { getSender } from \"../config/ChatLogic\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModel from \"./Miscellaneous/GroupChatModel\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\n  const [loggedUser, setLoggedUser] = useState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Chat\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"whitesmoke\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"1g\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModel>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModel>\n      </Box>\n\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"1g\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"whitesmoke\" : \"black\"}\n                px={3}\n                py={3}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import {\n  Box,\n  Button,\n  Tooltip,\n  Text,\n  Menu,\n  MenuButton,\n  MenuList,\n  Avatar,\n  MenuItem,\n  MenuDivider,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  useDisclosure,\n  DrawerBody,\n  Input,\n  useToast,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"../../Api\";\nimport NotificationBadge, { Effect } from \"react-notification-badge\";\n\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport ProfileModal from \"./ProfileModal\";\nimport ChatLoading from \"../ChatLoading\";\nimport UserListItem from \"../UserAvatar/UserListItem\";\nimport { getSender } from \"../../config/ChatLogic\";\n\nconst SideDrawer = () => {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toast = useToast();\n  const {\n    user,\n    setSelectedChat,\n    chats,\n    setChats,\n    notification,\n    setNotification,\n  } = ChatState();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter Something in Search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    try {\n      setLoadingChat(true);\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\"/api/chat\", { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) {\n        setChats([data, ...chats]);\n      }\n\n      setLoadingChat(false);\n      setSelectedChat(data);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error Fetching the Chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const gotToChat = (note) => {\n    setSelectedChat(note.chat);\n    setNotification(notification.filter((n) => n !== note));\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"whitesmoke\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px=\"4\">\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Chit-Chat\n        </Text>\n\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification?.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((note) => (\n                <MenuItem key={note._id} onClick={() => gotToChat(note)}>\n                  {note.chat.isGroupChat\n                    ? `New Message in ${note.chat.chatName}`\n                    : `New Message in ${getSender(user, note.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by mae or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ChatState } from \"../Context/ChatProvider\";\nimport ChatBox from \"../components/ChatBox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/Miscellaneous/SideDrawer\";\n\nconst ChatPage = () => {\n  const { user } = ChatState();\n  const [fetchAgain, setFetchAgain] = useState(false);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <ChatBox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default ChatPage;\n","import { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Homepage from \"./Pages/Homepage\";\nimport ChatPage from \"./Pages/ChatPage\";\nimport \"./App.css\";\nimport ChatProvider from \"./Context/ChatProvider\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ChatProvider>\n          <Route exact path=\"/\" component={Homepage} />\n          <Route path=\"/chats\" component={ChatPage} />\n        </ChatProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}